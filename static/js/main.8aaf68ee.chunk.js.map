{"version":3,"sources":["components/events/EditEvent.js","common/Constants.js","components/events/PastEvents.js","components/events/CurrentEvents.js","components/events/FutureEvents.js","components/users/UserTable.js","components/EventScreen.js","components/feedbacks/GeneralFeedback.js","components/feedbacks/EventFeedback.js","components/FeedbackScreen.js","components/HomeScreen.js","components/Residents.js","components/events/AddEventForm.js","App.js","reportWebVitals.js","LoginWrapper.js","index.js"],"names":["EditEvent","event","baseURL","PastEvents","match","useRouteMatch","React","useState","arrayObject","setArrayObject","show","setShow","eventName","setEventName","eventIndex","setEventIndex","handleClose","useEffect","axios","get","params","eventType","then","res","initialArray","i","data","length","object","name","startDate","endDate","eventDate","startTime","endTime","push","Container","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","eventJson","console","log","delete","catch","error","request","response","newArray","splice","handlePress","Table","striped","bordered","hover","map","index","Nav","Link","as","to","handleShow","url","CurrentEvents","history","useHistory","handleRemove","FutureEvents","responsive","isNumeric","str","isNaN","parseFloat","styles","form","marginBottom","confirmButton","marginLeft","UserTable","userArray","setUserArray","Array","fill","pax","setPax","shouldHighlight","setShouldHighlight","randomizeAlert","setRandomizeAlert","sendAlert","setSendAlert","isSent","setIsSent","choiceArray","setChoiceArray","choicePax","setChoicePax","message","setMessage","isCsvDataGenerated","setIsCsvDataGenerated","csvData","setCsvData","isSubmitted","isSelected","formProps","disabled","randomProps","tempArray","choice","status","headers","arrayUser","telegram_id","telegram_handle","item_chosen","collection_time","generateExcel","arr","Form","style","Group","className","controlId","Label","Control","required","value","onChange","e","target","placeholder","Text","defaultValue","Alert","validated","totalPax","parseInt","choiceJson","arraySet","array","some","filename","size","user","backgroundColor","rows","totalCondition","condition","chat_id","userJson","post","EventScreen","allEvents","setAllEvents","currentEvents","setCurrentEvents","Card","defaultActiveKey","Item","eventKey","path","component","GeneralFeedback","feedbacks","setFeedbacks","feedbackArray","feedback","EventFeedback","events","setEvents","dropdownItem","setDropdownItem","eventArray","Dropdown","Toggle","id","Menu","FeedbackScreen","justify","HomeScreen","Residents","users","setUsers","setTelegramId","userIndex","setUserIndex","nusnet_id","house","win_count","telegramId","AddEventForm","setStartDate","setEndDate","collectionDate","setCollectionDate","setStartTime","setEndTime","setValidated","question","setQuestion","submitType","setSubmitType","showToast","setShowToast","showAlertDate","setShowAlertDate","showAlertTime","setShowAlertTime","showAlertName","setShowAlertName","requestType","handlePostRequest","firstUpdate","useRef","current","startTime_minutes","concat","endTime_minutes","handleTimeCheck","onSubmit","htmlFor","InputGroup","FormControl","includes","handleSubmitCheck","Row","Col","xs","Toast","bg","src","alt","type","md","defaultControl","oldArray","App","Navbar","Brand","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LoginWrapper","isAuthenticated","setIsAuthenticated","errorMessage","setErrorMessage","username","password","preventDefault","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aaf68ee.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EditEvent = ({ event }) => {\n  return (\n    <div>\n      <h1>Edit {event}</h1>\n    </div>\n  );\n};\nexport default EditEvent;\n","// local server\nlet baseURL = \"https://18.224.63.50/api/\";\nlet username = \"admin\";\nlet password = \"rc4we1fare\";\n\nexport { baseURL, username, password };\n\n// // hosting server\n// let baseURL = \"http://3.128.205.154/api/\";\n// let username = \"admin\";\n// let password = \"rc4welfare\";\n\n// export { baseURL, username, password };\n","import React, { useRef } from \"react\";\nimport { Container, Table, Button, Nav, Modal } from \"react-bootstrap\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditEvent from \"./EditEvent\";\n\nimport { baseURL } from \"../../common/Constants\";\n\nconst EVENT_NAME = 1;\nconst START_DATE = 2;\nconst END_DATE = 3;\nconst COLLECTION_DATE = 4;\nconst START_TIME = 5;\nconst END_TIME = 6;\nconst EVENT_MESSAGE = 7;\n\nconst PastEvents = () => {\n  let match = useRouteMatch();\n  const [arrayObject, setArrayObject] = React.useState([]);\n  const [show, setShow] = React.useState(false);\n  const [eventName, setEventName] = React.useState(null);\n  const [eventIndex, setEventIndex] = React.useState(null);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = (index, eventName) => {\n    setShow(true);\n    setEventName(eventName);\n    setEventIndex(index);\n  };\n\n  React.useEffect(() => {\n    const event_type = {\n      eventType: \"past\",\n    };\n\n    axios.get(`${baseURL}events`, { params: event_type }).then((res) => {\n      var initialArray = [];\n      for (var i = 0; i < res.data.length; i++) {\n        var object = {\n          name: res.data[i][EVENT_NAME],\n          startDate: res.data[i][START_DATE],\n          endDate: res.data[i][END_DATE],\n          eventDate: res.data[i][COLLECTION_DATE],\n          startTime: res.data[i][START_TIME],\n          endTime: res.data[i][END_TIME],\n        };\n        initialArray.push(object);\n      }\n      setArrayObject(initialArray);\n    });\n  }, []);\n\n  // React.useEffect(() => {\n  //   console.log(\"hello\");\n  // }, [arrayObject]);\n\n  // const handlePress = (index) => {\n  //   console.log(index);\n  //   var newArray = arrayObject;\n  //   newArray.splice(index, 1);\n  //   console.log(newArray);\n  //   setArrayObject(newArray);\n  // };\n\n  const handlePress = () => {\n    setShow(false);\n    const eventJson = {\n      eventName: eventName,\n    };\n    console.log(eventJson);\n\n    axios\n      .delete(`${baseURL}events`, { data: eventJson })\n      .then((res) => console.log(res))\n      .catch((error) => {\n        if (error.request) {\n          console.log(error.request);\n        }\n        if (error.response) {\n          console.log(error.response);\n        }\n      });\n\n    var newArray = arrayObject;\n    newArray.splice(eventIndex, 1);\n    setArrayObject([...newArray]);\n  };\n\n  return (\n    <Container>\n      <Modal show={show} onHide={() => handleClose()}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm to Remove Event?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>You are unable to undo this action.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleClose()}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={() => handlePress()}>\n            Remove\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name of Event</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n            <th>Date of Event</th>\n            <th>Start Time</th>\n            <th>End Time</th>\n            <th>Remove Event</th>\n          </tr>\n        </thead>\n        <tbody>\n          {arrayObject.map((event, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <Nav>\n                  <Nav.Link as={Link} to={`${event.name}`}>\n                    {event.name}\n                  </Nav.Link>\n                </Nav>\n                <td>{event.startDate}</td>\n                <td>{event.endDate}</td>\n                <td>{event.eventDate}</td>\n                <td>{event.startTime}</td>\n                <td>{event.endTime}</td>\n                <td>\n                  <Button\n                    onClick={() => handleShow(index, event.name)}\n                    variant=\"danger\"\n                  >\n                    Remove\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <Switch>\n        {arrayObject.map((event, index) => {\n          <Route\n            key={index}\n            path={`${match.url}/${event.name}`}\n            component={EditEvent}\n          />;\n        })}\n      </Switch>\n    </Container>\n  );\n};\nexport default PastEvents;\n","import React, { useRef } from \"react\";\nimport { Container, Table, Button, Nav, Modal } from \"react-bootstrap\";\nimport {\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditEvent from \"./EditEvent\";\n\nimport { baseURL } from \"../../common/Constants\";\n\nconst EVENT_NAME = 1;\nconst START_DATE = 2;\nconst END_DATE = 3;\nconst COLLECTION_DATE = 4;\nconst START_TIME = 5;\nconst END_TIME = 6;\nconst EVENT_MESSAGE = 7;\n\nconst CurrentEvents = () => {\n  let history = useHistory();\n  let match = useRouteMatch();\n  const [arrayObject, setArrayObject] = React.useState([]);\n  const [show, setShow] = React.useState(false);\n  const [eventName, setEventName] = React.useState(null);\n  const [eventIndex, setEventIndex] = React.useState(null);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = (index, eventName) => {\n    setShow(true);\n    setEventName(eventName);\n    setEventIndex(index);\n  };\n\n  React.useEffect(() => {\n    const event_type = {\n      eventType: \"current\",\n    };\n\n    axios\n      .get(`${baseURL}events`, { params: event_type })\n      .then((res) => {\n        var initialArray = [];\n        for (var i = 0; i < res.data.length; i++) {\n          var object = {\n            name: res.data[i][EVENT_NAME],\n            startDate: res.data[i][START_DATE],\n            endDate: res.data[i][END_DATE],\n            eventDate: res.data[i][COLLECTION_DATE],\n            startTime: res.data[i][START_TIME],\n            endTime: res.data[i][END_TIME],\n          };\n          initialArray.push(object);\n        }\n        setArrayObject(initialArray);\n      })\n      .catch((error) => {\n        if (error.request) {\n          console.log(error.request);\n        }\n        if (error.response) {\n          console.log(error.response);\n        }\n      });\n  }, []);\n\n  const handleRemove = () => {\n    setShow(false);\n    const eventJson = {\n      eventName: eventName,\n    };\n    console.log(eventJson);\n\n    axios\n      .delete(`${baseURL}events`, { data: eventJson })\n      .then((res) => console.log(res))\n      .catch((error) => {\n        if (error.request) {\n          console.log(error.request);\n        }\n        if (error.response) {\n          console.log(error.response);\n        }\n      });\n\n    var newArray = arrayObject;\n    newArray.splice(eventIndex, 1);\n    setArrayObject([...newArray]);\n  };\n\n  const handleManage = (name) => {\n    history.push(`/events/users-${name}`);\n  };\n\n  return (\n    <Container>\n      <Modal show={show} onHide={() => handleClose()}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm to Remove Event?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>You are unable to undo this action.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleClose()}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={() => handleRemove()}>\n            Remove\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name of Event</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n            <th>Date of Event</th>\n            <th>Start Time</th>\n            <th>End Time</th>\n            <th>Remove Event</th>\n            <th>User Database</th>\n          </tr>\n        </thead>\n        <tbody>\n          {arrayObject.map((event, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <Nav>\n                  <Nav.Link as={Link} to={`${event.name}`}>\n                    {event.name}\n                  </Nav.Link>\n                </Nav>\n                <td>{event.startDate}</td>\n                <td>{event.endDate}</td>\n                <td>{event.eventDate}</td>\n                <td>{event.startTime}</td>\n                <td>{event.endTime}</td>\n                <td>\n                  <Button\n                    onClick={() => handleShow(index, event.name)}\n                    variant=\"danger\"\n                  >\n                    Remove\n                  </Button>\n                </td>\n                <td>\n                  {/* <Link to={`users-${event.name}`}> */}\n                  <Button\n                    onClick={() => handleManage(event.name)}\n                    variant=\"warning\"\n                  >\n                    Manage\n                  </Button>\n                  {/* </Link> */}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {/* <Switch>\n        {arrayObject.map((event, index) => {\n          <Route key={index} path={`${event.name}`} component={EditEvent}>\n            <EditEvent event={event}/>\n          </Route>;\n        })}\n      </Switch> */}\n    </Container>\n  );\n};\nexport default CurrentEvents;\n","import React, { useRef } from \"react\";\nimport { Container, Table, Button, Nav, Modal } from \"react-bootstrap\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Plus, PlusSquare } from \"react-bootstrap-icons\";\nimport axios from \"axios\";\nimport EditEvent from \"./EditEvent\";\n\nimport { baseURL } from \"../../common/Constants\";\n\nconst EVENT_NAME = 1;\nconst START_DATE = 2;\nconst END_DATE = 3;\nconst COLLECTION_DATE = 4;\nconst START_TIME = 5;\nconst END_TIME = 6;\nconst EVENT_MESSAGE = 7;\n\nconst FutureEvents = () => {\n  let match = useRouteMatch();\n  const [arrayObject, setArrayObject] = React.useState([]);\n  const [show, setShow] = React.useState(false);\n  const [eventName, setEventName] = React.useState(null);\n  const [eventIndex, setEventIndex] = React.useState(null);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = (index, eventName) => {\n    setShow(true);\n    setEventName(eventName);\n    setEventIndex(index);\n  };\n\n  React.useEffect(() => {\n    const event_type = {\n      eventType: \"future\",\n    };\n    axios.get(`${baseURL}events`, { params: event_type }).then((res) => {\n      var initialArray = [];\n      for (var i = 0; i < res.data.length; i++) {\n        var object = {\n          name: res.data[i][EVENT_NAME],\n          startDate: res.data[i][START_DATE],\n          endDate: res.data[i][END_DATE],\n          eventDate: res.data[i][COLLECTION_DATE],\n          startTime: res.data[i][START_TIME],\n          endTime: res.data[i][END_TIME],\n        };\n        initialArray.push(object);\n      }\n      setArrayObject(initialArray);\n    });\n  }, []);\n\n  // React.useEffect(() => {\n  //   console.log(\"hello\");\n  // }, [arrayObject]);\n\n  // const handlePress = (index) => {\n  //   console.log(index);\n  //   var newArray = arrayObject;\n  //   newArray.splice(index, 1);\n  //   console.log(newArray);\n  //   setArrayObject(newArray);\n  // };\n\n  const handlePress = () => {\n    setShow(false);\n    const eventJson = {\n      eventName: eventName,\n    };\n    // console.log(eventJson);\n\n    axios\n      .delete(`${baseURL}events`, { data: eventJson })\n      .then((res) => console.log(res))\n      .catch((error) => {\n        if (error.request) {\n          console.log(error.request);\n        }\n        if (error.response) {\n          console.log(error.response);\n        }\n      });\n    var newArray = arrayObject;\n    newArray.splice(eventIndex, 1);\n    setArrayObject([...newArray]);\n  };\n\n  return (\n    <Container>\n      <Modal show={show} onHide={() => handleClose()}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm to Remove Event?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>You are unable to undo this action.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleClose()}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={() => handlePress()}>\n            Remove\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name of Event</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n            <th>Date of Event</th>\n            <th>Start Time</th>\n            <th>End Time</th>\n            <th>Remove Event</th>\n          </tr>\n        </thead>\n        <tbody>\n          {arrayObject.map((event, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <Nav>\n                  <Nav.Link as={Link} to={`${event.name}`}>\n                    {event.name}\n                  </Nav.Link>\n                </Nav>\n                <td>{event.startDate}</td>\n                <td>{event.endDate}</td>\n                <td>{event.eventDate}</td>\n                <td>{event.startTime}</td>\n                <td>{event.endTime}</td>\n                <td>\n                  <Button\n                    // onClick={() => handlePress(index, event.name)}\n                    onClick={() => handleShow(index, event.name)}\n                    variant=\"danger\"\n                  >\n                    Remove\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <Switch>\n        {arrayObject.map((event, index) => {\n          <Route\n            key={index}\n            path={`${match.url}/${event.name}`}\n            component={EditEvent}\n          />;\n        })}\n      </Switch>\n    </Container>\n  );\n};\nexport default FutureEvents;\n","import React from \"react\";\nimport { Container, Table, Button, Form, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../common/Constants\";\nimport { CSVLink } from \"react-csv\";\n\nconst USER_NAME = 1;\nconst TELEGRAM_ID = 2;\nconst TELEGRAM_HANDLE = 3;\nconst COLLECTION_TIME = 4;\nconst ITEM_CHOSEN = 5;\nconst ITEM_BOOL = 7;\n\n// Helper function to check if input is a number\nfunction isNumeric(str) {\n  if (typeof str != \"string\") return false;\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\n\nconst UserTable = ({ event }) => {\n  const [userArray, setUserArray] = React.useState([]); // array of object\n  const initialArray = new Array(userArray.length).fill(0);\n  const [pax, setPax] = React.useState(null);\n  const [shouldHighlight, setShouldHighlight] = React.useState(initialArray);\n  const [randomizeAlert, setRandomizeAlert] = React.useState(false);\n  const [sendAlert, setSendAlert] = React.useState(false);\n  const [isSent, setIsSent] = React.useState(false);\n  const [choiceArray, setChoiceArray] = React.useState(null);\n  const [choicePax, setChoicePax] = React.useState(null);\n  const [message, setMessage] = React.useState(null);\n  const [isCsvDataGenerated, setIsCsvDataGenerated] = React.useState(false);\n  const [csvData, setCsvData] = React.useState([]);\n\n  // Unused States (might remove)\n  // const [colorChosen, setColorChosen] = React.useState(\"#52cca2\");\n  // const [colorRest, setColorRest] = React.useState(\"#fff\");\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const [isSelected, setIsSelected] = React.useState(false);\n\n  const formProps = isSubmitted ? { disabled: true } : {};\n  const randomProps = isSelected ? { disabled: true } : {};\n  const sendProps = isSent ? { disabled: true } : {};\n\n  React.useEffect(() => {\n    const eventJson = {\n      eventName: event,\n    };\n\n    axios\n      .get(`${baseURL}events/choices/exist`, { params: eventJson })\n      .then((res) => {\n        if (res.data) {\n          const eventJson = {\n            eventName: event,\n          };\n          axios\n            .get(`${baseURL}events/choices`, { params: eventJson })\n            .then((res) => {\n              setChoiceArray(res.data);\n              let tempArray = [];\n              res.data.map((choice) => {\n                tempArray.push(\"\");\n              });\n              setChoicePax(tempArray);\n            })\n            .catch((error) => {\n              if (error.response) {\n                // Request made and server responded\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n              } else if (error.request) {\n                // The request was made but no response was received\n                console.log(error.request);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                console.log(\"Error\", error.message);\n              }\n            });\n        }\n      })\n      .catch((error) => {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n\n    axios\n      .get(`${baseURL}users/event`, { params: eventJson })\n      .then((res) => {\n        var arrayUser = [];\n        for (var i = 0; i < res.data.length; i++) {\n          arrayUser.push({\n            telegram_id: res.data[i][TELEGRAM_ID],\n            name: res.data[i][USER_NAME],\n            telegram_handle: res.data[i][TELEGRAM_HANDLE],\n            item_chosen: res.data[i][ITEM_CHOSEN],\n            collection_time: res.data[i][COLLECTION_TIME],\n          });\n        }\n        setUserArray(arrayUser);\n      })\n      .catch((error) => {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  }, []);\n\n  const handleRandomize = () => {\n    let validated = true;\n    if (isNumeric(pax) === false) {\n      validated = false;\n    }\n    if (choicePax) {\n      var totalPax = 0;\n      choicePax.map((pax, index) => {\n        totalPax += parseInt(pax);\n      });\n      if (totalPax != pax || pax > userArray.length || pax == 0) {\n        validated = false;\n      }\n      choicePax.map((choice) => {\n        if (isNumeric(choice) === false) {\n          validated = false;\n        }\n      });\n    } else {\n      // if no choices available\n      if (pax > userArray.length || pax == 0) {\n        validated = false;\n      }\n    }\n    if (validated == false) {\n      return setRandomizeAlert(true);\n    } else {\n      setRandomizeAlert(false);\n      let choiceJson = {\n        eventName: event,\n        choicePax: choicePax,\n        totalPax: pax,\n      };\n      axios\n        .get(`${baseURL}users/shuffle`, { params: choiceJson })\n        .then((res) => {\n          var arraySet = [];\n          for (var i = 0; i < res.data.length; i++) {\n            arraySet.push({\n              telegram_id: res.data[i][TELEGRAM_ID],\n              name: res.data[i][USER_NAME],\n              telegram_handle: res.data[i][TELEGRAM_HANDLE],\n              item_chosen: res.data[i][ITEM_CHOSEN],\n              collection_time: res.data[i][COLLECTION_TIME],\n            });\n          }\n          // Change shouldHighlight list\n          // var i = 0; // counter for userArray\n          // var j = 0; // counter for arraySet\n          // while (i < userArray.length) {\n          //   if (\n          //     j < arraySet.length &&\n          //     userArray[i].telegram_id == arraySet[j].telegram_id\n          //   ) {\n          //     array.push(1);\n          //     j++;\n          //   } else {\n          //     array.push(0);\n          //   }\n          //   i++;\n          // }\n          var array = [];\n          for (var i = 0; i < userArray.length; i++) {\n            if (\n              arraySet.some((e) => e.telegram_id === userArray[i].telegram_id)\n            ) {\n              array.push(1);\n            } else {\n              array.push(0);\n            }\n          }\n          setShouldHighlight(array);\n          generateExcel(array);\n        })\n        .catch((error) => {\n          if (error.response) {\n            // Request made and server responded\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n          } else if (error.request) {\n            // The request was made but no response was received\n            console.log(error.request);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log(\"Error\", error.message);\n          }\n        });\n    }\n  };\n\n  const generateExcel = (arr) => {\n    setIsCsvDataGenerated(false);\n    setCsvData([]);\n    var data = [];\n    for (var i = 0; i < userArray.length; i++) {\n      data.push(userArray[i]);\n      data[i][\"selected\"] = arr[i];\n    }\n    setCsvData(data);\n    setIsCsvDataGenerated(true);\n  };\n\n  const handleSend = () => {\n    var totalCondition = 0;\n    shouldHighlight.map((condition, index) => {\n      totalCondition += parseInt(condition);\n    });\n    if (totalCondition == 0) {\n      return setSendAlert(true);\n    }\n    setSendAlert(false);\n    for (var i = 0; i < shouldHighlight.length; i++) {\n      const eventJson = {\n        chat_id: userArray[i].telegram_id,\n        message: message,\n      };\n      const userJson = {\n        telegram_id: userArray[i].telegram_id,\n      };\n      if (shouldHighlight[i]) {\n        axios.post(`${baseURL}users/event`, eventJson);\n        axios.post(`${baseURL}users/wincount`, userJson);\n      }\n    }\n    setIsSent(true);\n  };\n\n  return (\n    <Container>\n      <h3>Manage {event}</h3>\n      <Form style={styles.form}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <div className=\"mb-3\">\n            <Form.Label>Number of People</Form.Label>\n            <Form.Control\n              required\n              value={pax}\n              onChange={(e) => setPax(e.target.value)}\n              placeholder=\"e.g. 3\"\n              {...formProps}\n            />\n            <Form.Text className=\"text-muted\">\n              Key in no. of pax to receive giveaway\n            </Form.Text>\n          </div>\n          {choiceArray !== null\n            ? choiceArray.map((choice, index) => {\n                return (\n                  <div>\n                    <Form.Label>No. of pax for {choice[2]}</Form.Label>\n                    <Form.Control\n                      required\n                      className=\"mb-3\"\n                      defaultValue={choicePax === null ? \"\" : choicePax[index]}\n                      onChange={(e) => {\n                        let tempArray = choicePax;\n                        tempArray[index] = e.target.value;\n                        setChoicePax(tempArray);\n                      }}\n                      placeholder=\"e.g. 3\"\n                      {...formProps}\n                    />\n                  </div>\n                );\n              })\n            : null}\n          {randomizeAlert ? (\n            <Alert variant=\"danger\">Please key in valid inputs!</Alert>\n          ) : null}\n        </Form.Group>\n        <Button variant=\"primary\" onClick={handleRandomize} {...formProps}>\n          Generate List Of Welfare Recipients\n        </Button>{\" \"}\n        <span>&nbsp;&nbsp;</span>\n        {(isCsvDataGenerated && (\n          <CSVLink\n            data={csvData}\n            filename={event}\n            disabled={!isCsvDataGenerated}\n          >\n            <Button variant=\"warning\">Download Excel File</Button>\n          </CSVLink>\n        )) || (\n          <Button disabled={!isCsvDataGenerated} variant=\"secondary\">\n            Download Excel File\n          </Button>\n        )}\n        {/* <Button\n          variant=\"primary\"\n          onClick={handleRefresh}\n          style={styles.confirmButton}\n        >\n          Refresh\n        </Button> */}\n      </Form>\n\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Names</th>\n            <th>Telegram Handle</th>\n            <th>Item Chosen</th>\n            <th>Collection Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userArray.map((user, index) => {\n            return (\n              <tr\n                style={{\n                  backgroundColor: shouldHighlight[index] ? \"#52cca2\" : \"#fff\",\n                }}\n                key={index}\n              >\n                <td>{index + 1}</td>\n                <td>{user.name}</td>\n                <td>{user.telegram_handle}</td>\n                <td>{user.item_chosen}</td>\n                <td>{user.collection_time}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Confirmation Message:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"You have been selected! Please head down to the dining hall at your respective time slot to collect your welfare.\"\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </Form.Group>\n      </Form>\n\n      <Button onClick={handleSend} {...randomProps} disabled={isSent}>\n        {\" \"}\n        Send Welfare Message To Recipients{\" \"}\n      </Button>\n\n      <br></br>\n      <br></br>\n\n      {sendAlert ? (\n        <Alert variant=\"danger\">No user selected! Please generate list.</Alert>\n      ) : null}\n    </Container>\n  );\n};\n\nconst styles = {\n  form: {\n    marginBottom: 20,\n  },\n  confirmButton: {\n    marginLeft: 30,\n  },\n};\n\nexport default UserTable;\n","import React from \"react\";\nimport { Container, Nav, Card, Button } from \"react-bootstrap\";\nimport {\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\";\nimport PastEvents from \"./events/PastEvents\";\nimport CurrentEvents from \"./events/CurrentEvents\";\nimport FutureEvents from \"./events/FutureEvents\";\nimport { Plus, PlusSquare } from \"react-bootstrap-icons\";\nimport EditEvent from \"./events/EditEvent\";\nimport UserTable from \"./users/UserTable\";\nimport axios from \"axios\";\nimport { baseURL } from \"../common/Constants\";\n\nconst EVENT_NAME = 1;\nconst START_DATE = 2;\nconst END_DATE = 3;\nconst COLLECTION_DATE = 4;\nconst START_TIME = 5;\nconst END_TIME = 6;\nconst EVENT_MESSAGE = 7;\n\nconst EventScreen = () => {\n  let match = useRouteMatch();\n  let history = useHistory();\n\n  const handleToAddEvent = () => {\n    history.push(\"/add-event\");\n  };\n\n  // includes past, current & future events - must be unique\n  const [allEvents, setAllEvents] = React.useState([]);\n  const [currentEvents, setCurrentEvents] = React.useState([]);\n  React.useEffect(() => {\n    const all_events = {\n      eventType: \"all\",\n    };\n    const current_events = {\n      eventType: \"current\",\n    };\n\n    axios.get(`${baseURL}events`, { params: all_events }).then((res) => {\n      var initialArray = [];\n      for (var i = 0; i < res.data.length; i++) {\n        initialArray.push(res.data[i][EVENT_NAME]);\n      }\n      setAllEvents(initialArray);\n    });\n    axios.get(`${baseURL}events`, { params: current_events }).then((res) => {\n      var initialArray = [];\n      for (var i = 0; i < res.data.length; i++) {\n        initialArray.push(res.data[i][EVENT_NAME]);\n      }\n      setCurrentEvents(initialArray);\n    });\n    // allEvents.map((event, index) => {\n    //   console.log(\"hello\" + event);\n    // });\n  }, []);\n\n  return (\n    <Container>\n      <Card>\n        <Nav variant=\"tabs\" defaultActiveKey=\"link-0\">\n          <Nav.Item>\n            <Nav.Link\n              as={Link}\n              to={`${match.url}/past-events`}\n              eventKey=\"link-0\"\n            >\n              Past Events\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              as={Link}\n              to={`${match.url}/current-events`}\n              eventKey=\"link-1\"\n            >\n              Current Events\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              as={Link}\n              to={`${match.url}/future-events`}\n              eventKey=\"link-2\"\n            >\n              Future Events\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Switch>\n          {currentEvents.map((event, index) => {\n            return (\n              <Route key={index} path={`${match.url}/users-${event}`}>\n                <UserTable event={event} />\n              </Route>\n            );\n          })}\n          {allEvents.map((event, index) => {\n            return (\n              <Route key={index} path={`${match.url}/${event}`}>\n                <EditEvent event={event} />\n              </Route>\n            );\n          })}\n          {/* <Route path={`${match.url}/past-events`} component={PastEvents} /> */}\n          <Route path={`${match.url}/past-events`}>\n            <PastEvents />\n          </Route>\n          <Route\n            path={`${match.url}/current-events`}\n            component={CurrentEvents}\n          />\n          <Route path={`${match.url}/future-events`} component={FutureEvents} />\n        </Switch>\n      </Card>\n      <br></br>\n      <Button onClick={() => handleToAddEvent()}>\n        <Plus />\n        Add Event\n      </Button>\n    </Container>\n  );\n};\nexport default EventScreen;\n","import React from \"react\";\nimport { Container, Dropdown, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../common/Constants\";\n\nconst EVENT_NAME = 0;\nconst USER_NAME = 1;\nconst FEEDBACK_MESSAGE = 2;\n\nconst GeneralFeedback = () => {\n  // const feedbacks = [\n  //   \"Thank you for giving out welfare packs to us! We loved it\",\n  //   \"Thank you RC4Welfare!\",\n  //   \"Omg why are there ants around RC4Welfare?\",\n  // ];\n  const [feedbacks, setFeedbacks] = React.useState([]); // array of objects\n  React.useEffect(() => {\n    const eventName = {\n      eventName: \"general\",\n    };\n\n    axios\n      .get(`${baseURL}feedbacks`, { params: eventName })\n      .then((res) => {\n        const feedbackArray = [];\n        for (var i = 0; i < res.data.length; i++) {\n          feedbackArray.push({\n            name: res.data[i][USER_NAME],\n            message: res.data[i][FEEDBACK_MESSAGE],\n          });\n        }\n        setFeedbacks(feedbackArray);\n      })\n      .catch((error) => console.log(error.response));\n  }, []);\n\n  return (\n    <Container>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>User Name</th>\n            <th>Feedback Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          {feedbacks.map((feedback, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{feedback.name}</td>\n                <td>{feedback.message}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\nexport default GeneralFeedback;\n","import React from \"react\";\nimport { Container, Dropdown, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../common/Constants\";\n\n// Constants\nconst EVENT_NAME = 1;\nconst USER_NAME = 1;\nconst FEEDBACK_MESSAGE = 2;\n\nconst EventFeedback = () => {\n  const [feedbacks, setFeedbacks] = React.useState([]); // array of objects\n  const [events, setEvents] = React.useState([]);\n  const [dropdownItem, setDropdownItem] = React.useState(null);\n\n  React.useEffect(() => {\n    const eventType = {\n      eventType: \"past\",\n    };\n\n    axios.get(`${baseURL}events`, { params: eventType }).then((res) => {\n      const eventArray = [];\n      for (var i = 0; i < res.data.length; i++) {\n        eventArray.push(res.data[i][EVENT_NAME]);\n      }\n      setEvents(eventArray);\n      setDropdownItem(eventArray[0]); // first option\n      const eventName = {\n        eventName: eventArray[0],\n      };\n\n      axios\n        .get(`${baseURL}feedbacks`, { params: eventName })\n        .then((res) => {\n          const feedbackArray = [];\n          for (var i = 0; i < res.data.length; i++) {\n            feedbackArray.push({\n              name: res.data[i][USER_NAME],\n              message: res.data[i][FEEDBACK_MESSAGE],\n            });\n          }\n          setFeedbacks(feedbackArray);\n        })\n        .catch((error) => console.log(error.response));\n    });\n  }, []);\n\n  const handlePress = (event) => {\n    const eventName = {\n      eventName: event,\n    };\n\n    axios\n      .get(`${baseURL}feedbacks`, { params: eventName })\n      .then((res) => {\n        const feedbackArray = [];\n        for (var i = 0; i < res.data.length; i++) {\n          feedbackArray.push({\n            name: res.data[i][USER_NAME],\n            message: res.data[i][FEEDBACK_MESSAGE],\n          });\n        }\n        setFeedbacks(feedbackArray);\n      })\n      .catch((error) => console.log(error.response));\n    setDropdownItem(event);\n  };\n\n  return (\n    <Container>\n      <Dropdown>\n        <Dropdown.Toggle id=\"dropdown-basic\">{dropdownItem}</Dropdown.Toggle>\n        <Dropdown.Menu>\n          {events.map((event, index) => {\n            return (\n              <Dropdown.Item onClick={() => handlePress(event)} key={index}>\n                {event}\n              </Dropdown.Item>\n            );\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n      {/* <ListGroup>\n        {feedbacks.map((feedbackString, index) => {\n          return (\n            <ListGroup.Item key={index}>\n              {index + 1}. {feedbackString}\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup> */}\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>User Name</th>\n            <th>Feedback Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          {feedbacks.map((feedback, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{feedback.name}</td>\n                <td>{feedback.message}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\nexport default EventFeedback;\n","import React from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport GeneralFeedback from \"./feedbacks/GeneralFeedback\";\nimport EventFeedback from \"./feedbacks/EventFeedback\";\n\nconst FeedbackScreen = () => {\n  let match = useRouteMatch();\n\n  return (\n    <Container>\n      <Nav justify variant=\"tabs\" defaultActiveKey=\"link-0\">\n        <Nav.Item>\n          <Nav.Link as={Link} to={`${match.url}/general`} eventKey=\"link-0\">\n            General\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link as={Link} to={`${match.url}/events`} eventKey=\"link-1\">\n            Events\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <Switch>\n        <Route path={`${match.url}/general`} component={GeneralFeedback} />\n        <Route path={`${match.url}/events`} component={EventFeedback} />\n      </Switch>\n    </Container>\n  );\n};\nexport default FeedbackScreen;\n","import React from \"react\";\n\nconst HomeScreen = () => {\n  return (\n    <div>\n      <h1>Home Screen</h1>\n    </div>\n  );\n};\nexport default HomeScreen;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { Container, Nav, Table, Button, Modal } from \"react-bootstrap\";\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { baseURL } from \"../common/Constants\";\n\nconst USERNAME = 1;\nconst NUSNET_ID = 2;\nconst HOUSE = 3;\nconst TELEGRAM_ID = 4;\nconst TELEGRAM_HANDLE = 5;\nconst WIN_COUNT = 6;\n\nconst Residents = () => {\n  const [users, setUsers] = React.useState([]);\n  const [telegram_id, setTelegramId] = React.useState(null);\n  const [show, setShow] = React.useState(false);\n  const [userIndex, setUserIndex] = React.useState(null);\n\n  React.useEffect(() => {\n    axios\n      .get(`${baseURL}users`)\n      .then((res) => {\n        const userArray = [];\n        for (var i = 0; i < res.data.length; i++) {\n          userArray.push({\n            name: res.data[i][USERNAME],\n            nusnet_id: res.data[i][NUSNET_ID],\n            house: res.data[i][HOUSE],\n            telegram_id: res.data[i][TELEGRAM_ID],\n            telegram_handle: res.data[i][TELEGRAM_HANDLE],\n            win_count: res.data[i][WIN_COUNT],\n          });\n        }\n        setUsers(userArray);\n      })\n      .catch((error) => console.log(error.response));\n  }, []);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = (index, telegramId) => {\n    setShow(true);\n    setTelegramId(telegramId);\n    setUserIndex(index);\n  };\n\n  const handlePress = () => {\n    setShow(false);\n    const userJson = {\n      telegram_id: telegram_id,\n    };\n    axios\n      .delete(`${baseURL}users`, { data: userJson })\n      .then((res) => console.log(res))\n      .catch((error) => {\n        if (error.request) {\n          console.log(error.request);\n        }\n        if (error.response) {\n          console.log(error.response);\n        }\n      });\n    var newArray = users;\n    newArray.splice(userIndex, 1);\n    setUsers([...newArray]);\n  };\n\n  return (\n    <Container>\n      <Modal show={show} onHide={() => handleClose()}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm to Remove Event?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>You are unable to undo this action.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleClose()}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={() => handlePress()}>\n            Remove\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>NUSNET ID</th>\n            <th>House</th>\n            <th>Telegram Handle</th>\n            <th>Win Count</th>\n            <th>Delete User</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{user.name}</td>\n                <td>{user.nusnet_id}</td>\n                <td>{user.house}</td>\n                <td>{user.telegram_handle}</td>\n                <td>{user.win_count}</td>\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => handleShow(index, user.telegram_id)}\n                  >\n                    Remove\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\nexport default Residents;\n","import React from \"react\";\nimport {\n  InputGroup,\n  FormControl,\n  Row,\n  Col,\n  FloatingLabel,\n  Container,\n  Form,\n  Table,\n  Button,\n  Nav,\n  Dropdown,\n  DropdownButton,\n  Alert,\n  Toast,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Plus } from \"react-bootstrap-icons\";\n\nimport { baseURL } from \"../../common/Constants\";\n\nconst AddEventForm = () => {\n  const [eventName, setEventName] = React.useState(null);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setEndDate] = React.useState(null);\n  const [collectionDate, setCollectionDate] = React.useState(null);\n  const [startTime, setStartTime] = React.useState(null);\n  const [endTime, setEndTime] = React.useState(null);\n  const [validated, setValidated] = React.useState(false);\n  const [choiceArray, setChoiceArray] = React.useState([]);\n  const [message, setMessage] = React.useState(null);\n  const [question, setQuestion] = React.useState(\"\");\n  const [submitType, setSubmitType] = React.useState(\"\");\n  const [showToast, setShowToast] = React.useState(false);\n  const [showAlertDate, setShowAlertDate] = React.useState(false);\n  const [showAlertTime, setShowAlertTime] = React.useState(false);\n  const [showAlertName, setShowAlertName] = React.useState(false);\n\n  const handlePostRequest = () => {\n    const eventJson = {\n      requestType: \"add_event\",\n      eventName: eventName,\n      startDate: startDate,\n      endDate: endDate,\n      collectionDate: collectionDate,\n      startTime: startTime,\n      endTime: endTime,\n      message: message,\n      question: question,\n      choiceArray: choiceArray,\n    };\n\n    axios\n      .post(`${baseURL}events`, eventJson)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  const handleSubmitClick = (event) => {\n    if (\n      eventName !== null &&\n      startDate !== null &&\n      endDate !== null &&\n      collectionDate !== null &&\n      startTime !== null &&\n      endTime !== null\n      // message !== null\n    ) {\n      setValidated(true);\n    }\n  };\n\n  const handleDateCheck = () => {\n    if (startDate > endDate || endDate >= collectionDate) {\n      setSubmitType(\"\");\n      setShowAlertDate(true);\n    } else {\n      setSubmitType(\"submit\");\n      setShowAlertDate(false);\n    }\n  };\n\n  const handleTimeCheck = () => {\n    if (startTime == null || endTime == null) {\n      return;\n    }\n    if (!(startTime[3] && startTime[4] && endTime[3] && endTime[4])) {\n      return;\n    }\n    const startTime_minutes = parseInt(startTime[3].concat(startTime[4]));\n    const endTime_minutes = parseInt(endTime[3].concat(endTime[4]));\n    if (\n      startTime >= endTime ||\n      startTime_minutes % 15 != 0 ||\n      endTime_minutes % 15 != 0\n    ) {\n      setSubmitType(\"\");\n      setShowAlertTime(true);\n    } else {\n      setSubmitType(\"submit\");\n      setShowAlertTime(false);\n    }\n  };\n\n  const handleSubmitCheck = (eventName) => {\n    if (eventName.includes(\"(\") && eventName.includes(\")\")) {\n      setSubmitType(\"\");\n      setShowAlertName(true);\n    } else {\n      setSubmitType(\"submit\");\n      setShowAlertName(false);\n    }\n\n    const eventJson = {\n      requestType: \"check\",\n      eventName: eventName,\n    };\n    axios\n      .post(`${baseURL}events`, eventJson)\n      .then((res) => {\n        if (!res.data) {\n          setSubmitType(\"submit\");\n          setShowToast(false);\n        } else {\n          setSubmitType(\"\");\n          setShowToast(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  React.useEffect(() => {\n    if (validated === true) {\n      handlePostRequest();\n      setValidated(false);\n    }\n  });\n\n  const firstUpdate = React.useRef(true);\n  React.useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    handleDateCheck();\n    handleTimeCheck();\n  }, [startDate, endDate, collectionDate, startTime, endTime]);\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmitClick}>\n        <h2>Create an event</h2>\n        <br></br>\n        <Form.Label htmlFor=\"basic-url\">Event Name:</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            required\n            placeholder=\"e.g. Recess Week Welfare\"\n            aria-label=\"Username\"\n            aria-describedby=\"basic-addon1\"\n            onChange={(e) => {\n              setEventName(e.target.value);\n              handleSubmitCheck(e.target.value);\n            }}\n          />\n        </InputGroup>\n        <Row>\n          <Col xs={6}>\n            <Toast bg={\"danger\"} show={showToast}>\n              <Toast.Header closeButton={false}>\n                <img\n                  src=\"holder.js/20x20?text=%20\"\n                  className=\"rounded me-2\"\n                  alt=\"\"\n                />\n                <strong className=\"me-auto\">\n                  Event name already exists! Please use different name.\n                </strong>\n              </Toast.Header>\n              {/* <Toast.Body>Event Name already exists!</Toast.Body> */}\n            </Toast>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={6}>\n            <Toast bg={\"danger\"} show={showAlertName}>\n              <Toast.Header closeButton={false}>\n                <img\n                  src=\"holder.js/20x20?text=%20\"\n                  className=\"rounded me-2\"\n                  alt=\"\"\n                />\n                <strong className=\"me-auto\">\n                  Event name invalid. Please do not include brackets in your\n                  name!\n                </strong>\n              </Toast.Header>\n              {/* <Toast.Body>Event Name already exists!</Toast.Body> */}\n            </Toast>\n          </Col>\n        </Row>\n\n        {/* <Form.Label htmlFor=\"basic-url\">Event Type:</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <DropdownButton\n            variant=\"outline-secondary\"\n            title={eventType === null ? \"Select Type\" : eventType}\n            id=\"input-group-dropdown-1\"\n          >\n            <Dropdown.Item as=\"button\">\n              <div onClick={(e) => setEventType(e.target.textContent)}>\n                Future Event\n              </div>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"button\">\n              <div onClick={(e) => setEventType(e.target.textContent)}>\n                Current Event\n              </div>\n            </Dropdown.Item>\n            <Dropdown.Item as=\"button\">\n              <div onClick={(e) => setEventType(e.target.textContent)}>\n                Past Event\n              </div>\n            </Dropdown.Item>\n          </DropdownButton>\n        </InputGroup> */}\n\n        <Form.Label htmlFor=\"basic-url\">Sign Up Period:</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"basic-addon1\">Start Date</InputGroup.Text>\n          <Form.Control\n            required\n            type=\"date\"\n            onChange={(e) => setStartDate(e.target.value)}\n          />\n          <InputGroup.Text id=\"basic-addon1\">End Date</InputGroup.Text>\n          <Form.Control\n            required\n            type=\"date\"\n            onChange={(e) => setEndDate(e.target.value)}\n          />\n        </InputGroup>\n\n        <Form.Label htmlFor=\"basic-url\">Collection Date:</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"date\"\n            onChange={(e) => setCollectionDate(e.target.value)}\n          />\n        </InputGroup>\n\n        <Row>\n          <Col xs={6}>\n            <Toast bg={\"danger\"} show={showAlertDate}>\n              <Toast.Header closeButton={false}>\n                <img\n                  src=\"holder.js/20x20?text=%20\"\n                  className=\"rounded me-2\"\n                  alt=\"\"\n                />\n                <strong className=\"me-auto\">\n                  Please check order of dates!\n                </strong>\n              </Toast.Header>\n              {/* <Toast.Body>Event Name already exists!</Toast.Body> */}\n            </Toast>\n          </Col>\n        </Row>\n\n        <Form.Label htmlFor=\"basic-url\">Collection Time:</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"basic-addon1\">Start Time</InputGroup.Text>\n          <Form.Control\n            required\n            type=\"time\"\n            onChange={(e) => {\n              setStartTime(e.target.value);\n              console.log(e.target.value[3], e.target.value[4]);\n            }}\n          />\n          <InputGroup.Text id=\"basic-addon1\">End Time</InputGroup.Text>\n          <Form.Control\n            required\n            type=\"time\"\n            onChange={(e) => setEndTime(e.target.value)}\n          />\n        </InputGroup>\n\n        <Row>\n          <Col xs={6}>\n            <Toast bg={\"danger\"} show={showAlertTime}>\n              <Toast.Header closeButton={false}>\n                <img\n                  src=\"holder.js/20x20?text=%20\"\n                  className=\"rounded me-2\"\n                  alt=\"\"\n                />\n                <strong className=\"me-auto\">Please check time inputs!</strong>\n              </Toast.Header>\n              {/* <Toast.Body>Event Name already exists!</Toast.Body> */}\n            </Toast>\n          </Col>\n        </Row>\n\n        {/* <Form.Label htmlFor=\"basic-url\">Confirmation Message:</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            required\n            placeholder=\"e.g. You have been selected for Recess Week Welfare. Please remember to make your payment on www.payment.com!\"\n            aria-label=\"Username\"\n            aria-describedby=\"basic-addon1\"\n            onChange={(e) => setMessage(e.target.value)}\n            as=\"textarea\"\n            rows={3}\n          />\n        </InputGroup>\n\n        <Form.Label htmlFor=\"basic-url\">Question To Ask (Optional)</Form.Label> */}\n\n        <Col md>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              placeholder=\"e.g. What is your desired sugar level?\"\n              aria-label=\"Username\"\n              aria-describedby=\"basic-addon1\"\n              onChange={(e) => setQuestion(e.target.value)}\n            />\n          </InputGroup>\n        </Col>\n        <Col md>\n          {choiceArray.map((choice, index) => {\n            return (\n              <div>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Text id=\"basic-addon1\">\n                    Option {index + 1}\n                  </InputGroup.Text>\n                  <FormControl\n                    defaultControl\n                    defaultValue={choice}\n                    placeholder=\"e.g. 25% Sugar\"\n                    aria-label=\"Username\"\n                    aria-describedby=\"basic-addon1\"\n                    onChange={(e) => {\n                      let tempArray = choiceArray;\n                      tempArray[index] = e.target.value;\n                      console.log(tempArray);\n                      return tempArray;\n                    }}\n                  />\n                </InputGroup>\n              </div>\n            );\n          })}\n        </Col>\n        <Button onClick={() => setChoiceArray((oldArray) => [...oldArray, \"\"])}>\n          <Plus />\n          Add Option\n        </Button>\n\n        <br></br>\n        <br></br>\n        <br></br>\n\n        <Button variant=\"primary\" type={submitType}>\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default AddEventForm;\n","import React, { useState } from \"react\";\n// import Jumbotron from 'react-bootstrap/Jumbotron';\nimport Toast from \"react-bootstrap/Toast\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport EventScreen from \"./components/EventScreen\";\nimport FeedbackScreen from \"./components/FeedbackScreen\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport Residents from \"./components/Residents\";\nimport AddEventForm from \"./components/events/AddEventForm\";\n\nimport \"./App.css\";\n\nconst App = () => (\n  <Router>\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand as={Link} to={\"/home\"}>\n          RC4 Welfare Bot\n        </Navbar.Brand>\n        <Nav className=\"me-auto\">\n          <Nav.Link as={Link} to={\"/events\"}>\n            Events\n          </Nav.Link>\n          <Nav.Link as={Link} to={\"/feedbacks\"}>\n            Feedbacks\n          </Nav.Link>\n          <Nav.Link as={Link} to={\"/users\"}>\n            Users\n          </Nav.Link>\n        </Nav>\n      </Container>\n    </Navbar>\n    <Container>\n      <Switch>\n        <Route path=\"/home\" component={HomeScreen} />\n        <Route path=\"/events\" component={EventScreen} />\n        <Route path=\"/feedbacks\" component={FeedbackScreen} />\n        <Route path=\"/users\" component={Residents} />\n        <Route path=\"/add-event\" component={AddEventForm} />\n      </Switch>\n    </Container>\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport {\n    Container,\n    Form,\n    Button,\n    Alert,\n} from \"react-bootstrap\";\nimport App from \"./App\";\nimport { username, password } from \"./common/Constants\";\nimport \"./LoginWrapper.css\";\n\nconst LoginWrapper = () => {\n\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState('');\n\n    const handleSubmitClick = (event) => {\n        if (event.target.username.value === username && event.target.password.value === password) {\n            setIsAuthenticated(true);\n        } else {\n            setErrorMessage(\"Access denied.\")\n            event.preventDefault();\n            event.target.reset();\n        }\n    };\n\n    return <div>\n        {!isAuthenticated && (\n            <Container className=\"login\">\n                <Form onSubmit={handleSubmitClick}>\n                    <h2>Welcome to RC4 Welfare Bot</h2>\n                    <Form.Group className=\"mb-3\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"username\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" />\n                    </Form.Group>\n                    {errorMessage && <Alert variant=\"danger\"> {errorMessage}</Alert>}\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Container>)}\n        {isAuthenticated && <App />}\n    </div>\n\n};\n\nexport default LoginWrapper;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport LoginWrapper from \"./LoginWrapper\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <LoginWrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}